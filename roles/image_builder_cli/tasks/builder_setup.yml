---
- name: Gather packages facts
  ansible.builtin.package_facts:

- name: Create Image Builder configuration directory
  ansible.builtin.file:
    path: "{{ image_builder_cli_repo_path }}"
    state: directory
    mode: '0755'
  when: image_builder_cli_use_satellite | bool

- name: Read system repository configuration
  vars:
    image_builder_rhel_ver: "{{ ansible_facts.distribution_major_version }}"
    image_builder_rhel_arch: "{{ ansible_facts.architecture }}"
  ansible.builtin.shell: >
    set -o pipefail &&
    grep -A 5 '^\[rhel-{{ image_builder_rhel_ver }}-for-{{ image_builder_rhel_arch }}-baseos-rpms\]' /etc/yum.repos.d/redhat.repo
    | awk '/baseurl/ {print $3}'
  register: image_builder_rhsm_baseurl
  changed_when: false
  when:
    - image_builder_cli_use_satellite | bool
    - image_builder_cli_repo_versions | default(false, true)

- name: Create basic repository configuration files
  vars:
    image_builder_baseos_repo_url: "{{ image_builder_rhsm_baseurl.stdout | replace('$releasever', item) }}"
    image_builder_appstream_repo_url: "{{ image_builder_rhsm_baseurl.stdout | replace('$releasever', item) | replace('baseos', 'appstream') }}"
  ansible.builtin.template:
    src: rhel-repo.json.j2
    dest: "{{ image_builder_cli_repo_path }}/rhel-{{ item }}.json"
    mode: '0644'
  register: image_builder_config_basic
  loop: "{{ image_builder_cli_repo_versions | default([], true) }}"
  when: image_builder_cli_use_satellite | bool

- name: Create custom repository configuration files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ image_builder_cli_repo_path }}/{{ item | basename | replace('.j2', '') }}"
    mode: '0644'
  register: image_builder_config_custom
  loop: "{{ image_builder_cli_repo_templates | default([], true) }}"
  when: image_builder_cli_use_satellite | bool

- name: Reboot system
  ansible.builtin.reboot:
  when:
    - "'osbuild-composer' in ansible_facts.packages"
    - image_builder_config_basic is changed or
      image_builder_config_custom is changed

- name: Install Podman
  ansible.builtin.dnf:
    name:
      - git-core
      - podman
    state: present
  register: image_builder_builder_packages
  when:
    - "'git-core' not in ansible_facts.packages"
    - "'podman' not in ansible_facts.packages"

- name: Update all packages
  # noqa: package-latest
  ansible.builtin.dnf:
    name: '*'
    state: latest
    update_cache: true
  register: image_builder_package_update
  when: image_builder_cli_update_host | bool

- name: Reboot system
  ansible.builtin.reboot:
  when:
    - image_builder_cli_reboot_host | bool
    - image_builder_builder_packages is changed or
      image_builder_package_update is changed

- name: Pull the image-builder container
  containers.podman.podman_image:
    name: ghcr.io/osbuild/image-builder-cli
    tag: "{{ image_builder_cli_version }}"
  when: not image_builder_cli_dry_run | bool
